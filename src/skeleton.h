/* BEGIN HEADER */
#ifndef @ModuleNameUpper()@_INCLUDE_
#define @ModuleNameUpper()@_INCLUDE_

#include <assert.h>
#include <unordered_map>
#include <utility>

#include "classp.h"

// Include files generated by bison
#include "@ModuleName()@.yacc.hh"
#include "location.hh"
#include "position.hh"

namespace @NamespaceName()@ {
using std::istream;
using std::ostream;
using classp::classpPrint;
using classp::classpFormat;
using classp::AttributeMap;

// Location and state information from the parser.
typedef location ParseState;

class AstNode;
/* BEGIN FORWARD DECLARATIONS */
  @@PrintForwardDeclarations(out);@@
/* END FORWARD DECLARATIONS */

// Base class for @NamespaceName()@ AST nodes
class AstNode : public classp::ClasspNode {
 public:
  string className() override { return "AstNode"; }
  AstNode(ParseState parseState)
    : parseState(parseState) {
    }

  // Write out a bracketed form of this AST from the declared syntax.
  virtual void bracketFormat(std::ostream& out, AstNode* self) {
    assert(false);
  }

  ParseState parseState;
};

/* BEGIN CLASS DEFINITIONS */
  @@PrintClassDefinitions(out);@@
/* END CLASS DEFINITIONS */

}  // namespace @NamespaceName()@
#endif // @ModuleNameUpper()@_INCLUDE_

/* END HEADER */
